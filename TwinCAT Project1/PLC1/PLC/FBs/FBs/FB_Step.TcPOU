<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_Step" Id="{61a658dd-5a98-09d1-28da-afd0d5f9d3a6}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Step
VAR_INPUT
	iThisStepNum:INT; //requested number of the step
	iDepth:BOOL; //TRUE if the step has been completed to depth
END_VAR
VAR_OUTPUT
	qGo:BOOL; //TRUE to actuate the step
	qIsLastStep:BOOL; //TRUE if the step number is the last step
END_VAR
VAR
	tStepLive: BOOL;
	tSeqNotActive: BOOL;
	tNextNum: INT;
	j: INT;
	tNextStepNum: INT;
	osrDepth:R_TRIG;
	rRunningTotal: INT;
	k: INT;
END_VAR
VAR_IN_OUT
	stationState:typeStationMode;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//step counter
//starting step = 0
//if the step counter is = 0, and if the autocycling state is TRUE, then move the step counter to 1
//
//each FB call houses one step change to the next step
//the depth state of a step triggers the counter to move to the next step number,
//e.g. 0,1,2,3,10,11,20,30,40,100,500


//enable function
//IF stationState.AutoCycling THEN
IF stationState.AutoCycling OR TRUE THEN
	tStepLive := TRUE;
	ELSE
	tStepLive := FALSE;
END_IF

//find next step num, the next number in squence of the array, or the next highest number
IF tStepLive THEN
	actFindNextStep();
	ELSE
	//nowt
END_IF

//check if step squencer is not active
IF tStepLive THEN
	IF stationState.stepNum = 0 THEN
			tSeqNotActive := TRUE;
		ELSE
			tSeqNotActive := FALSE;
		END_IF
	
	ELSE
	tSeqNotActive := TRUE;
END_IF

//if the previous step number, stepNum, then perform the step
IF tStepLive THEN
	IF stationState.stepNum = iThisStepNum THEN
			qGo := TRUE;
		ELSE
			qGo := FALSE;
		END_IF
	
	ELSE
	qGo := FALSE;
END_IF

//state the last step
IF tNextStepNum = stationState.sizeofStepListing THEN
		qIsLastStep := TRUE;
	ELSE
		qIsLastStep := FALSE;
END_IF

//depth trigger
osrDepth(CLK := iDepth);
IF osrDepth.Q THEN
	stationState.stepNum := tNextStepNum;
	
	//loop around on complete max
	IF stationState.stepNum = stationState.sizeofStepListing THEN
		stationState.stepNum := 0;
	END_IF
	
END_IF

//starting step
IF stationState.stepNum = 0 AND tStepLive THEN
	//stationState.stepNum = 1
	
END_IF



 ]]></ST>
    </Implementation>
    <Action Name="actFindNextStep" Id="{2a97f42f-5167-0878-0a4e-4131435005a2}">
      <Implementation>
        <ST><![CDATA[//assign location of step
stationState.stepNumListing[iThisStepNum] := iThisStepNum;

//assign last step, for continuity
stationState.stepNumListing[stationState.sizeofStepListing] := stationState.sizeofStepListing;


//search for next step number, starting from the input from the current step, 
FOR j := iThisStepNum TO stationState.sizeofStepListing DO
	//
	//find the next highest number
	IF stationState.stepNumListing[j] > iThisStepNum THEN
		tNextStepNum := j; 
		
		//no further steps found, assign max possible number
		IF j = stationState.sizeofStepListing THEN
			tNextStepNum := stationState.sizeofStepListing;
			EXIT;
		END_IF
		
		EXIT;
	END_IF
END_FOR]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="FB_Step">
      <LineId Id="215" Count="0" />
      <LineId Id="220" Count="6" />
      <LineId Id="219" Count="0" />
      <LineId Id="154" Count="45" />
      <LineId Id="201" Count="10" />
      <LineId Id="228" Count="0" />
      <LineId Id="227" Count="0" />
      <LineId Id="229" Count="0" />
      <LineId Id="232" Count="0" />
      <LineId Id="230" Count="1" />
      <LineId Id="212" Count="2" />
      <LineId Id="42" Count="0" />
    </LineIds>
    <LineIds Name="FB_Step.actFindNextStep">
      <LineId Id="33" Count="21" />
      <LineId Id="3" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>