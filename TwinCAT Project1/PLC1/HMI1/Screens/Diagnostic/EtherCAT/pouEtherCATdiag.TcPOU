<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="pouEtherCATdiag" Id="{73650198-8c30-49b6-b422-2b646bfaa17e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM pouEtherCATdiag
VAR
	iVal: WORD;
	tVal: WORD;
	tmask: WORD;
	state: UINT;
	i: UINT;
	decode:fb_decodeEtherCAT;
	
END_VAR
]]></Declaration>
    <Implementation>
      <NWL>
        <XmlArchive>
          <Data>
            <o xml:space="preserve" t="NWLImplementationObject">
              <v n="NetworkListComment">""</v>
              <v n="DefaultViewMode">"Ld"</v>
              <l2 n="NetworkList" cet="Network">
                <o>
                  <v n="ILActive">false</v>
                  <v n="FBDValid">false</v>
                  <v n="ILValid">false</v>
                  <l2 n="ILLines" />
                  <v n="Comment">""</v>
                  <v n="Title">""</v>
                  <v n="Label">""</v>
                  <v n="OutCommented">false</v>
                  <l2 n="NetworkItems" cet="BoxTreeBox">
                    <o>
                      <v n="BoxType">"actEtherCATSlaveDiag"</v>
                      <o n="Instance" t="Operand">
                        <n n="Operand" />
                        <v n="Type">""</v>
                        <v n="Comment">""</v>
                        <v n="SymbolComment">""</v>
                        <v n="Address">""</v>
                        <o n="Flags" t="Flags">
                          <v n="Flags">0</v>
                          <v n="Fixed">false</v>
                          <v n="Extensible">false</v>
                        </o>
                        <v n="LValue">false</v>
                        <v n="Boolean">false</v>
                        <v n="IsInstance">true</v>
                        <v n="Id">38L</v>
                      </o>
                      <o n="OutputItems" t="OutputItemList">
                        <l2 n="OutputItems">
                          <n />
                        </l2>
                      </o>
                      <o n="Flags" t="Flags">
                        <v n="Flags">0</v>
                        <v n="Fixed">true</v>
                        <v n="Extensible">false</v>
                      </o>
                      <n n="InputFlags" />
                      <l2 n="InputItems" cet="BoxTreeTerminator">
                        <o>
                          <n n="Input" />
                          <o n="Flags" t="Flags">
                            <v n="Flags">0</v>
                            <v n="Fixed">false</v>
                            <v n="Extensible">false</v>
                          </o>
                          <v n="Id">25L</v>
                        </o>
                      </l2>
                      <o n="InputParam" t="ParamList">
                        <l2 n="Names" cet="String">
                          <v>EN</v>
                        </l2>
                        <l2 n="Types" cet="String">
                          <v>BOOL</v>
                        </l2>
                      </o>
                      <o n="OutputParam" t="ParamList">
                        <l2 n="Names" cet="String">
                          <v>ENO</v>
                        </l2>
                        <l2 n="Types" cet="String">
                          <v>BOOL</v>
                        </l2>
                      </o>
                      <v n="CallType" t="Operator">Action</v>
                      <v n="EN">true</v>
                      <v n="ENO">true</v>
                      <n n="STSnippet" />
                      <v n="ContainsExtensibleInputs">false</v>
                      <v n="ProvidesSTSnippet">false</v>
                      <v n="Id">39L</v>
                    </o>
                  </l2>
                  <l2 n="Connectors" />
                  <v n="Id">5L</v>
                </o>
              </l2>
              <v n="BranchCounter">0</v>
              <v n="ValidIds">true</v>
            </o>
          </Data>
          <TypeList>
            <Type n="Boolean">System.Boolean</Type>
            <Type n="BoxTreeBox">{acfc6f68-8e3a-4af5-bf81-3dd512095a46}</Type>
            <Type n="BoxTreeTerminator">{5f9848d3-568d-4cc5-9e31-8e28e9607ff1}</Type>
            <Type n="Flags">{668066f2-6069-46b3-8962-8db8d13d7db2}</Type>
            <Type n="Int32">System.Int32</Type>
            <Type n="Int64">System.Int64</Type>
            <Type n="Network">{d9a99d73-b633-47db-b876-a752acb25871}</Type>
            <Type n="NWLImplementationObject">{25e509de-33d4-4447-93f8-c9e4ea381c8b}</Type>
            <Type n="Operand">{c9b2f165-48a2-4a45-8326-3952d8a3d708}</Type>
            <Type n="Operator">{bffb3c53-f105-4e85-aba2-e30df579d75f}</Type>
            <Type n="OutputItemList">{f40d3e09-c02c-4522-a88c-dac23558cfc4}</Type>
            <Type n="ParamList">{71496971-9e0c-4677-a832-b9583b571130}</Type>
            <Type n="String">System.String</Type>
          </TypeList>
        </XmlArchive>
      </NWL>
    </Implementation>
    <Action Name="actEtherCATSlaveDiag" Id="{ad26e273-933b-4a92-8e3a-4cf2719bddff}">
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO  etherCATdiag.maxNumEtherCATSlaves DO //
	
//move temp data from scan to temp declarations
decode(iVal:=etherCATdiag.RawEtherCATStateDiag[i]);
etherCATdiag.EtherCATslaveDiag[i].currentState.state := decode.state;
etherCATdiag.EtherCATslaveDiag[i].currentState.suffix := decode.suffix;


	//check values for fault
	//current state
	IF etherCATdiag.EtherCATslaveDiag[i].currentState.state <> EtherCATstate.OP  OR //EtherCATstate.OP 
		etherCATdiag.EtherCATslaveDiag[i].currentState.suffix <> EtherCATSuffix.NoState THEN //EtherCATSuffix.NoState
		etherCATdiag.EtherCATslaveDiag[i].currentState.isFault := TRUE;
		ELSE
		etherCATdiag.EtherCATslaveDiag[i].currentState.isFault := FALSE;	
	END_IF
	

	//record outer box
	//record previous state, latching 
	IF etherCATdiag.EtherCATslaveDiag[i].currentState.isFault = FALSE AND 
	   etherCATdiag.EtherCATslaveDiag[i].historicalState.isFault = FALSE THEN
		//at this time, record the current state in the historical state
		etherCATdiag.EtherCATslaveDiag[i].historicalState.state := etherCATdiag.EtherCATslaveDiag[i].currentState.state;
		etherCATdiag.EtherCATslaveDiag[i].historicalState.suffix := etherCATdiag.EtherCATslaveDiag[i].currentState.suffix;
	END_IF
	
	//clear inner box when fault is resolved
	IF 	etherCATdiag.EtherCATslaveDiag[i].currentState.isFault = FALSE AND
	   HMIData.btnReset THEN
	   etherCATdiag.EtherCATslaveDiag[i].historicalState.isFault := FALSE;
	END_IF
	
	
			//check if any suffix fault exits
			IF etherCATdiag.EtherCATslaveDiag[i].currentState.suffix > 1 THEN
				
				//check suffix
				CASE etherCATdiag.EtherCATslaveDiag[i].currentState.suffix OF 
				EtherCATSuffix.SSError						: 	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				EtherCATSuffix.InvalidVendor				: 	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				EtherCATSuffix.InitError 					: 	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				EtherCATSuffix.SlaveDisabled				:	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				EtherCATSuffix.SlaveNotPresent				: 	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				EtherCATSuffix.SlaveSignalsLinkError		:	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				EtherCATSuffix.SlaveSignalsMissingLink		:	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				EtherCATSuffix.SlaveSignalsUnExpectLink		:	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				EtherCATSuffix.CommsPortA					:	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				EtherCATSuffix.CommsPortB					:	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				EtherCATSuffix.CommsPortC					:	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				EtherCATSuffix.CommsPortD					:	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				END_CASE;
				
			ELSE
				//otherwise check state to get green
				CASE etherCATdiag.EtherCATslaveDiag[i].currentState.state OF 
				EtherCATstate.INIT		: 	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				EtherCATstate.PREOP		: 	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				EtherCATstate.BOOT		: 	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				EtherCATstate.SAFEOP	: 	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourRed;
				EtherCATstate.OP		: 	etherCATdiag.EtherCATslaveDiag[i].currentState.colour := HMIColour.colourGreen;
				END_CASE;
				
			END_IF
	
	
	
	
END_FOR
]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="pouEtherCATdiag.actEtherCATSlaveDiag">
      <LineId Id="90" Count="0" />
      <LineId Id="3" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="162" Count="0" />
      <LineId Id="164" Count="1" />
      <LineId Id="161" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="95" Count="1" />
      <LineId Id="98" Count="3" />
      <LineId Id="97" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="4" Count="3" />
      <LineId Id="9" Count="1" />
      <LineId Id="103" Count="0" />
      <LineId Id="11" Count="7" />
      <LineId Id="155" Count="1" />
      <LineId Id="123" Count="0" />
      <LineId Id="127" Count="14" />
      <LineId Id="125" Count="0" />
      <LineId Id="142" Count="1" />
      <LineId Id="147" Count="7" />
      <LineId Id="145" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="56" Count="2" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>