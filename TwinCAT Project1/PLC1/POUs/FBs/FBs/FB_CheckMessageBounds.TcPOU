<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_CheckMessageBounds" Id="{cfd3e64b-34a3-43a4-b491-e0f565bbe474}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_CheckMessageBounds
VAR_IN_OUT
	iqArrayToCheck:typeMessage; //type of message bounds
	

END_VAR
VAR_OUTPUT
	qAnyMsgActive: BOOL;
	qMsgNumberActive: INT;
	
	qSingleMessage: STRING(255);
	
	qAllMessages: STRING;
	

END_VAR
VAR
	i: INT;//for the loop
	lowestValue: UDINT :=4294967295; //set as init for highest possible value and work down from there
	lowestMessage: INT;
	allstrings: STRING;
	rollinglowestValue: UDINT :=0; //set as init for lowest possible value and work up
	newlineInsert: string;

	messageHeader: STRING(255);
	memcomparecheck: DINT;
	memchanged: BOOL;
END_VAR

VAR_INPUT
	iMessageGroup: INT;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[	//mark active message as inactive
	//reset before scan
	qAnyMsgActive		:= FALSE;
	qMsgNumberActive 	:= 0;
	actArraysMatch();
	
	IF memchanged THEN
		

	
		
FOR i := 0 TO GlobalMessages.gNumMessagesPerType DO
	
	//loop entire array
	IF iqArrayToCheck.message[i] = TRUE THEN
		
		//mark active message as active
		qAnyMsgActive		:= TRUE;
		qMsgNumberActive 	:= i;
		
		
	END_IF
		
	//move time of message into message type
	IF 			iqArrayToCheck.message[i] = TRUE 
		AND 	iqArrayToCheck.messageActive[i] = FALSE
		AND  iqArrayToCheck.messageTimeActive[i] = 0   
		THEN
			iqArrayToCheck.messageTimeActive[i] := System.myPlcInfoTask1.CycleCount;
		//write message text to array

	END_IF
	
		
	
	//if the calling logic is FALSE, but the latched memory is TRUE, then remove the latch
//	IF iqArrayToCheck.message[i] = FALSE AND  iqArrayToCheck.messageActive[i] = TRUE THEN
	
		//clear down logic for singular message	
	//	iqArrayToCheck.messageActive[i] := FALSE; //message bool
//		iqArrayToCheck.messageTimeActive[i] := 0; //message time for compare
		
	
//	END_IF
	
	//find lowest message number, the lowest number is the first message that has appeared and thus, the only one worthwhile
	IF qAnyMsgActive THEN //if there is any message active in the array, then find the lowest number
		
		IF iqArrayToCheck.messageTimeActive[i] > 1 THEN 			//consider the message
			IF  iqArrayToCheck.messageTimeActive[i] < lowestValue   THEN
				//record the index of the lowest message to write later
				lowestValue := 	iqArrayToCheck.messageTimeActive[i];//lowest TIME value
				lowestMessage := i;									//lowest value message		
				qSingleMessage := iqArrayToCheck.text[i];			//return the message text of the single lowest alarm
				
				IF rollinglowestValue = 0 THEN //starting point
					rollinglowestValue := lowestValue;				//assign lowest message for multi line use
				END_IF
			
			END_IF	
		END_IF
	ELSE
		//no message active at all, so return zeros
		qSingleMessage := 'no message';								//no message text
		lowestMessage := 0;											//return zero for no message
		lowestValue := 4294967295;									//return highest possible number for next time
		
		//clear down single data
		qAnyMsgActive		:= FALSE;								//clear down with implicit
		qMsgNumberActive 	:= 0;									//clear down with implicit
		rollinglowestValue 	:= 0;
	END_IF
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//loop around the array and find the lowest number >1 and write that message first, then all other messages in incrementing order
	//once the message is written to the list, set the .MessageActive bit to TRUE
	IF rollinglowestValue > 1 THEN //rolling value is valid
		
		//the current message is active, but not yet written
		IF iqArrayToCheck.message[i] = TRUE  THEN
			
							//combine message texts into long string with CR LFs
							newlineInsert := concat(iqArrayToCheck.text[i], '$0D'); //make new line
							
							//add message number
							//messageHeader := concat(INT_TO_STRING(iMessageGroup),newlineInsert);
								
 
							allstrings := concat(newlineInsert,allstrings); //and put it at the top of the pack
							
							//message was written, so turn on message active bit iqArrayToCheck.messageActive[i]
							iqArrayToCheck.messageActive[i] := TRUE;
						//END_IF
	
			
							
		END_IF	

	
	END_IF
	
	//reset message usage on dual arrays
	IF iqArrayToCheck.message[i] = FALSE AND  iqArrayToCheck.messageActive[i] = TRUE THEN
	iqArrayToCheck.messageActive[i] := FALSE;
	iqArrayToCheck.messageTimeActive[i] := 0;
	END_IF
	
	//message exists, so write strings to output
	IF rollinglowestValue > 1 THEN 
				qAllMessages := allstrings;
			ELSE
				newlineInsert := '';
				allstrings := '';
				qAllMessages:= '';
	END_IF
	

END_FOR;


	END_IF

]]></ST>
    </Implementation>
    <Action Name="actArraysMatch" Id="{deaf4cea-369a-4b23-adf0-691b3612839c}">
      <Implementation>
        <NWL>
          <XmlArchive>
            <Data>
              <o xml:space="preserve" t="NWLImplementationObject">
                <v n="NetworkListComment">""</v>
                <v n="DefaultViewMode">"Ld"</v>
                <l2 n="NetworkList" cet="Network">
                  <o>
                    <v n="ILActive">false</v>
                    <v n="FBDValid">false</v>
                    <v n="ILValid">false</v>
                    <l2 n="ILLines" />
                    <v n="Comment">""</v>
                    <v n="Title">""</v>
                    <v n="Label">""</v>
                    <v n="OutCommented">false</v>
                    <l2 n="NetworkItems" cet="BoxTreeBox">
                      <o>
                        <v n="BoxType">"memcmp"</v>
                        <o n="Instance" t="Operand">
                          <n n="Operand" />
                          <v n="Type">""</v>
                          <v n="Comment">""</v>
                          <v n="SymbolComment">""</v>
                          <v n="Address">""</v>
                          <o n="Flags" t="Flags">
                            <v n="Flags">0</v>
                            <v n="Fixed">false</v>
                            <v n="Extensible">false</v>
                          </o>
                          <v n="LValue">false</v>
                          <v n="Boolean">false</v>
                          <v n="IsInstance">true</v>
                          <v n="Id">19L</v>
                        </o>
                        <o n="OutputItems" t="OutputItemList">
                          <l2 n="OutputItems" cet="Operand">
                            <n />
                            <o>
                              <v n="Operand">"memcomparecheck"</v>
                              <v n="Type">"DINT"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">10L</v>
                            </o>
                          </l2>
                        </o>
                        <o n="Flags" t="Flags">
                          <v n="Flags">0</v>
                          <v n="Fixed">true</v>
                          <v n="Extensible">false</v>
                        </o>
                        <n n="InputFlags" />
                        <l2 n="InputItems">
                          <o t="BoxTreeTerminator">
                            <n n="Input" />
                            <o n="Flags" t="Flags">
                              <v n="Flags">0</v>
                              <v n="Fixed">false</v>
                              <v n="Extensible">false</v>
                            </o>
                            <v n="Id">23L</v>
                          </o>
                          <o t="BoxTreeOperand">
                            <o n="Operand" t="Operand">
                              <v n="Operand">"adr(iqArrayToCheck.message)"</v>
                              <v n="Type">"POINTER TO ARRAY [0..GlobalMessages.gNumMessagesPerType] OF BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">14L</v>
                            </o>
                            <v n="Id">13L</v>
                          </o>
                          <o t="BoxTreeOperand">
                            <o n="Operand" t="Operand">
                              <v n="Operand">"adr(iqArrayToCheck.messageActive)"</v>
                              <v n="Type">"POINTER TO ARRAY [0..GlobalMessages.gNumMessagesPerType] OF BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">16L</v>
                            </o>
                            <v n="Id">15L</v>
                          </o>
                          <o t="BoxTreeOperand">
                            <o n="Operand" t="Operand">
                              <v n="Operand">"sizeof(iqArrayToCheck.message)"</v>
                              <v n="Type">"UINT"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">false</v>
                              <v n="Boolean">false</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">22L</v>
                            </o>
                            <v n="Id">21L</v>
                          </o>
                        </l2>
                        <o n="InputParam" t="ParamList">
                          <l2 n="Names" cet="String">
                            <v>EN</v>
                            <v>pBuf1</v>
                            <v>pBuf2</v>
                            <v>n</v>
                          </l2>
                          <l2 n="Types" cet="String">
                            <v>BOOL</v>
                            <v>PVOID</v>
                            <v>PVOID</v>
                            <v>UDINT</v>
                          </l2>
                        </o>
                        <o n="OutputParam" t="ParamList">
                          <l2 n="Names" cet="String">
                            <v>ENO</v>
                            <v>   </v>
                          </l2>
                          <l2 n="Types" cet="String">
                            <v>BOOL</v>
                            <v>DINT</v>
                          </l2>
                        </o>
                        <v n="CallType" t="Operator">Function</v>
                        <v n="EN">true</v>
                        <v n="ENO">true</v>
                        <n n="STSnippet" />
                        <v n="ContainsExtensibleInputs">false</v>
                        <v n="ProvidesSTSnippet">false</v>
                        <v n="Id">20L</v>
                      </o>
                    </l2>
                    <l2 n="Connectors" />
                    <v n="Id">1L</v>
                  </o>
                  <o>
                    <v n="ILActive">false</v>
                    <v n="FBDValid">false</v>
                    <v n="ILValid">false</v>
                    <l2 n="ILLines" />
                    <v n="Comment">""</v>
                    <v n="Title">""</v>
                    <v n="Label">""</v>
                    <v n="OutCommented">false</v>
                    <l2 n="NetworkItems" cet="BoxTreeAssign">
                      <o>
                        <o n="OutputItems" t="OutputItemList">
                          <l2 n="OutputItems" cet="Operand">
                            <o>
                              <v n="Operand">"memchanged"</v>
                              <v n="Type">"BOOL"</v>
                              <v n="Comment">""</v>
                              <v n="SymbolComment">""</v>
                              <v n="Address">""</v>
                              <o n="Flags" t="Flags">
                                <v n="Flags">1</v>
                                <v n="Fixed">true</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="LValue">true</v>
                              <v n="Boolean">true</v>
                              <v n="IsInstance">false</v>
                              <v n="Id">27L</v>
                            </o>
                          </l2>
                        </o>
                        <o n="Flags" t="Flags">
                          <v n="Flags">0</v>
                          <v n="Fixed">false</v>
                          <v n="Extensible">false</v>
                        </o>
                        <o n="RValue" t="BoxTreeBox">
                          <v n="BoxType">"EQ"</v>
                          <o n="Instance" t="Operand">
                            <n n="Operand" />
                            <v n="Type">""</v>
                            <v n="Comment">""</v>
                            <v n="SymbolComment">""</v>
                            <v n="Address">""</v>
                            <o n="Flags" t="Flags">
                              <v n="Flags">0</v>
                              <v n="Fixed">false</v>
                              <v n="Extensible">false</v>
                            </o>
                            <v n="LValue">false</v>
                            <v n="Boolean">false</v>
                            <v n="IsInstance">true</v>
                            <v n="Id">31L</v>
                          </o>
                          <o n="OutputItems" t="OutputItemList">
                            <l2 n="OutputItems">
                              <n />
                            </l2>
                          </o>
                          <o n="Flags" t="Flags">
                            <v n="Flags">0</v>
                            <v n="Fixed">false</v>
                            <v n="Extensible">false</v>
                          </o>
                          <n n="InputFlags" />
                          <l2 n="InputItems">
                            <o t="BoxTreeTerminator">
                              <n n="Input" />
                              <o n="Flags" t="Flags">
                                <v n="Flags">0</v>
                                <v n="Fixed">false</v>
                                <v n="Extensible">false</v>
                              </o>
                              <v n="Id">39L</v>
                            </o>
                            <o t="BoxTreeOperand">
                              <o n="Operand" t="Operand">
                                <v n="Operand">"memcomparecheck"</v>
                                <v n="Type">"DINT"</v>
                                <v n="Comment">""</v>
                                <v n="SymbolComment">""</v>
                                <v n="Address">""</v>
                                <o n="Flags" t="Flags">
                                  <v n="Flags">0</v>
                                  <v n="Fixed">false</v>
                                  <v n="Extensible">false</v>
                                </o>
                                <v n="LValue">false</v>
                                <v n="Boolean">false</v>
                                <v n="IsInstance">false</v>
                                <v n="Id">36L</v>
                              </o>
                              <v n="Id">35L</v>
                            </o>
                            <o t="BoxTreeOperand">
                              <o n="Operand" t="Operand">
                                <v n="Operand">"0"</v>
                                <v n="Type">"INT"</v>
                                <v n="Comment">""</v>
                                <v n="SymbolComment">""</v>
                                <v n="Address">""</v>
                                <o n="Flags" t="Flags">
                                  <v n="Flags">0</v>
                                  <v n="Fixed">false</v>
                                  <v n="Extensible">false</v>
                                </o>
                                <v n="LValue">false</v>
                                <v n="Boolean">false</v>
                                <v n="IsInstance">false</v>
                                <v n="Id">38L</v>
                              </o>
                              <v n="Id">37L</v>
                            </o>
                          </l2>
                          <o n="InputParam" t="ParamList">
                            <l2 n="Names" cet="String">
                              <v>EN</v>
                            </l2>
                            <l2 n="Types" cet="String">
                              <v>BOOL</v>
                            </l2>
                          </o>
                          <o n="OutputParam" t="ParamList">
                            <l2 n="Names" cet="String">
                              <v></v>
                            </l2>
                            <l2 n="Types" cet="String">
                              <v>BOOL</v>
                            </l2>
                          </o>
                          <v n="CallType" t="Operator">Eq</v>
                          <v n="EN">true</v>
                          <v n="ENO">false</v>
                          <n n="STSnippet" />
                          <v n="ContainsExtensibleInputs">false</v>
                          <v n="ProvidesSTSnippet">false</v>
                          <v n="Id">32L</v>
                        </o>
                        <v n="Id">28L</v>
                      </o>
                    </l2>
                    <l2 n="Connectors" />
                    <v n="Id">24L</v>
                  </o>
                </l2>
                <v n="BranchCounter">0</v>
                <v n="ValidIds">true</v>
              </o>
            </Data>
            <TypeList>
              <Type n="Boolean">System.Boolean</Type>
              <Type n="BoxTreeAssign">{9873c309-1f09-4ebf-9078-42d8057ef11b}</Type>
              <Type n="BoxTreeBox">{acfc6f68-8e3a-4af5-bf81-3dd512095a46}</Type>
              <Type n="BoxTreeOperand">{9de7f100-1b87-424c-a62e-45b0cfc85ed2}</Type>
              <Type n="BoxTreeTerminator">{5f9848d3-568d-4cc5-9e31-8e28e9607ff1}</Type>
              <Type n="Flags">{668066f2-6069-46b3-8962-8db8d13d7db2}</Type>
              <Type n="Int32">System.Int32</Type>
              <Type n="Int64">System.Int64</Type>
              <Type n="Network">{d9a99d73-b633-47db-b876-a752acb25871}</Type>
              <Type n="NWLImplementationObject">{25e509de-33d4-4447-93f8-c9e4ea381c8b}</Type>
              <Type n="Operand">{c9b2f165-48a2-4a45-8326-3952d8a3d708}</Type>
              <Type n="Operator">{bffb3c53-f105-4e85-aba2-e30df579d75f}</Type>
              <Type n="OutputItemList">{f40d3e09-c02c-4522-a88c-dac23558cfc4}</Type>
              <Type n="ParamList">{71496971-9e0c-4677-a832-b9583b571130}</Type>
              <Type n="String">System.String</Type>
            </TypeList>
          </XmlArchive>
        </NWL>
      </Implementation>
    </Action>
    <LineIds Name="FB_CheckMessageBounds">
      <LineId Id="313" Count="3" />
      <LineId Id="539" Count="1" />
      <LineId Id="542" Count="0" />
      <LineId Id="544" Count="1" />
      <LineId Id="543" Count="0" />
      <LineId Id="311" Count="0" />
      <LineId Id="214" Count="1" />
      <LineId Id="310" Count="0" />
      <LineId Id="217" Count="2" />
      <LineId Id="221" Count="1" />
      <LineId Id="343" Count="0" />
      <LineId Id="348" Count="0" />
      <LineId Id="291" Count="0" />
      <LineId Id="223" Count="2" />
      <LineId Id="452" Count="0" />
      <LineId Id="454" Count="1" />
      <LineId Id="226" Count="0" />
      <LineId Id="296" Count="0" />
      <LineId Id="295" Count="0" />
      <LineId Id="227" Count="0" />
      <LineId Id="283" Count="0" />
      <LineId Id="286" Count="0" />
      <LineId Id="235" Count="11" />
      <LineId Id="255" Count="0" />
      <LineId Id="258" Count="0" />
      <LineId Id="267" Count="0" />
      <LineId Id="317" Count="0" />
      <LineId Id="268" Count="0" />
      <LineId Id="270" Count="0" />
      <LineId Id="277" Count="1" />
      <LineId Id="457" Count="3" />
      <LineId Id="403" Count="0" />
      <LineId Id="269" Count="0" />
      <LineId Id="265" Count="0" />
      <LineId Id="260" Count="0" />
      <LineId Id="276" Count="0" />
      <LineId Id="261" Count="0" />
      <LineId Id="273" Count="1" />
      <LineId Id="300" Count="1" />
      <LineId Id="275" Count="0" />
      <LineId Id="302" Count="0" />
      <LineId Id="473" Count="0" />
      <LineId Id="259" Count="0" />
      <LineId Id="382" Count="0" />
      <LineId Id="387" Count="0" />
      <LineId Id="384" Count="0" />
      <LineId Id="416" Count="0" />
      <LineId Id="429" Count="0" />
      <LineId Id="444" Count="0" />
      <LineId Id="430" Count="0" />
      <LineId Id="437" Count="0" />
      <LineId Id="427" Count="0" />
      <LineId Id="425" Count="0" />
      <LineId Id="501" Count="2" />
      <LineId Id="506" Count="0" />
      <LineId Id="504" Count="0" />
      <LineId Id="472" Count="0" />
      <LineId Id="426" Count="0" />
      <LineId Id="420" Count="0" />
      <LineId Id="443" Count="0" />
      <LineId Id="422" Count="1" />
      <LineId Id="419" Count="0" />
      <LineId Id="411" Count="0" />
      <LineId Id="409" Count="0" />
      <LineId Id="400" Count="1" />
      <LineId Id="399" Count="0" />
      <LineId Id="445" Count="3" />
      <LineId Id="456" Count="0" />
      <LineId Id="449" Count="1" />
      <LineId Id="487" Count="6" />
      <LineId Id="464" Count="0" />
      <LineId Id="396" Count="0" />
      <LineId Id="248" Count="2" />
      <LineId Id="478" Count="1" />
      <LineId Id="251" Count="0" />
      <LineId Id="22" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>